/*
 * Designed and developed by 2024 ashtanko (Oleksii Shtanko)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package dev.shtanko.oop.lms

/**
 * Represents a patron in the library management system.
 *
 * @property name The name of the patron.
 * @property age The age of the patron.
 * @property email The email of the patron.
 * @property id The unique identifier of the patron. It is generated by the `generateUniqueId` function.
 */
data class Patron(
    val name: String,
    val age: Int,
    val email: String,
    val id: String = generateUniqueId(),
) {
    companion object {
        private const val MAX_BOOK_SIZE = Int.MAX_VALUE
        private var idCounter = MAX_BOOK_SIZE

        /**
         * Generates a unique identifier for a patron.
         *
         * The identifier is a string that starts with "P" and is followed by a number that is incremented each time
         * this function is called.
         *
         * @return The generated unique identifier.
         */
        private fun generateUniqueId(): String {
            return "P${idCounter++}"
        }
    }
}
