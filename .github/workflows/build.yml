name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Validate Gradle Wrapper
        run: ./gradlew --version

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v4.2.3
        with:
          path: ${{ env.GRADLE_HOME }}/caches
          key: |
            gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
            -${{ hashFiles('**/*.gradle*') }}
            -${{ hashFiles('**/buildSrc/**') }}
            -${{ github.sha }}
          restore-keys: |
            gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
            -${{ hashFiles('**/*.gradle*') }}
            -${{ hashFiles('**/buildSrc/**') }}

      - name: Run Detekt
        run: ./gradlew detekt --build-cache --no-daemon --stacktrace

      - name: Build with Gradle and run tests
        run: ./gradlew build -x koverVerify -x ktlintCheck -x ktlintFormat -x runKtlintCheckOverTestSourceSet -x ktlintMainSourceSetCheck -x ktlintKotlinScriptCheck

      - name: Generate Test Coverage Xml Report
        run: ./gradlew koverXmlReport

      - name: Upload test coverage to qlty
        uses: qltysh/qlty-action/coverage@v1
        with:
          oidc: true
          files: build/reports/jacoco/test/jacocoTestReport.xml
          add-prefix: src/main/kotlin

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./build/reports/jacoco/test/jacocoTestReport.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
