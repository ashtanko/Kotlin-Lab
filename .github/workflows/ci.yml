name: Build

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Validate Gradle Wrapper
        run: ./gradlew --version
        working-directory: JVM/jacoco/gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Spotless Apply
        run: ./gradlew spotlessApply

      - name: Spotless
        run: ./gradlew spotlessCheck --stacktrace

      - name: Detekt
        run: ./gradlew detekt --stacktrace

      - name: Ktlint
        run: ./gradlew ktlintCheck --stacktrace

      - name: Build Health
        run: ./gradlew buildHealth --build-cache --stacktrace

      - name: Unit Tests
        run: ./gradlew test --build-cache --stacktrace
        working-directory: JVM/jacoco/gradle

      - name: Jacoco test report
        run: ./gradlew jacocoTestReport
        working-directory: JVM/jacoco/gradle

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

      - name: Upload jacoco report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          #path: "${{ github.workspace }}/**/build/reports/jacoco"
          path: JVM/jacoco/gradle/.qodana/code-coverage

      - name: Upload detekt report
        uses: actions/upload-artifact@v3
        with:
          name: detekt-report
          path: "${{ github.workspace }}/**/build/reports/detekt/detekt.html"

  qodana:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis
      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@main
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }} # read the steps about it below
        with:
          args: "-i,JVM/jacoco/gradle,--linter,jetbrains/qodana-jvm-community:2023.2-eap"
          pr-mode: false
